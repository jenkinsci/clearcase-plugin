
  <!--

    The MIT License Copyright (c) 2007-2009, Sun Microsystems, Inc.,
    Kohsuke Kawaguchi, Erik Ramfelt, Henrik Lynggaard, Peter Liljenberg,
    Andrew Bayer Permission is hereby granted, free of charge, to any
    person obtaining a copy of this software and associated
    documentation files (the "Software"), to deal in the Software
    without restriction, including without limitation the rights to use,
    copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software
    is furnished to do so, subject to the following conditions: The
    above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software. THE SOFTWARE
    IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
  -->
  <j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:f="/lib/form" xmlns:local="/lib/clearcase">

  <f:entry title="View tag" help="/plugin/clearcase/viewtag.html">
    <f:textbox name="cc.viewname"
      value="${h.defaulted(scm.viewName, descriptor.defaultViewName)}"
      checkUrl="'${rootURL}/scm/ClearCaseSCM/mandatoryCheck?errorText='+escape('Entering a view tag is mandatory')+'&amp;value='+escape(this.value)" />
  </f:entry>
  <f:entry title="View path" help="/plugin/clearcase/localdir.html">
    <f:textbox name="cc.viewpath"
      value="${h.defaulted(scm.viewPath, h.defaulted(scm.viewName, descriptor.defaultViewPath))}"/>
  </f:entry>

  <f:block>
  <f:optionalBlock name="cc.getConfigSpecFromFile"
                   title="Get config spec from a file"
                   help="/plugin/clearcase/base/get-cs-from-file.html"
                   checked="${scm.extractConfigSpec}" >
   	<f:entry title="File name" help="/plugin/clearcase/base/cs-file-name.html">
     <f:textbox name="cc.configSpecFileName" value="${scm.configSpecFileName}"
		checkUrl="'${rootURL}/scm/ClearCaseSCM/mandatoryCheck?errorText='+escape('Config spec file is mandatory')+'&amp;value='+escape(this.value)" />
   	</f:entry>
    <f:block>
      <f:optionalBlock name="cc.refreshConfigSpec"
                       title="Refresh config spec"
                       help="/plugin/clearcase/base/refresh-cs.html"
                       checked="${scm.refreshConfigSpec}" >
        <f:entry title="Refresh command" help="/plugin/clearcase/base/refresh-command.html">
        	<f:textbox name="cc.refreshConfigSpecCommand" value="${scm.refreshConfigSpecCommand}"
        	checkUrl="'${rootURL}/scm/ClearCaseSCM/mandatoryCheck?errorText='+escape('Refresh command is mandatory')+'&amp;value='+escape(this.value)" />
        </f:entry>
      </f:optionalBlock>
    </f:block>
  </f:optionalBlock>

  <f:entry title="Config spec" help="/plugin/clearcase/configspec.html">
    <f:textarea name="cc.configspec" value="${scm.configSpec}"
      checkUrl="'${rootURL}/scm/ClearCaseSCM/configSpecCheck?value='+escape(this.value)" />
  </f:entry>

  <f:optionalBlock name="cc.extractLoadRules"
                   title="Get load rules from config spec"
                   help="/plugin/clearcase/base/get-load-rules-from-cs.html"
                   checked="${scm.extractLoadRules}" negative="true">
	<f:entry title="Load rules" help="/plugin/clearcase/loadrules.html">
	  <f:textarea name="cc.loadrules" value="${scm.loadRules}"
		checkUrl="'${rootURL}/scm/ClearCaseSCM/mandatoryCheck?errorText='+escape('Load rules are mandatory')+'&amp;value='+escape(this.value)" />
	</f:entry>
  </f:optionalBlock>

  <f:optionalBlock name="cc.useOtherLoadRulesForPolling"
                   title="Use other load rules for polling"
                   help="/plugin/clearcase/base/use-other-load-rules-for-polling.html"
                   checked="${scm.useOtherLoadRulesForPolling}" >
  <f:entry title="Load rules for polling" help="/plugin/clearcase/loadrules-for-polling.html">
    <f:textarea name="cc.loadRulesForPolling" value="${scm.loadRulesForPolling}"
    checkUrl="'${rootURL}/scm/ClearCaseSCM/mandatoryCheck?errorText='+escape('Load rules for polling are mandatory')+'&amp;value='+escape(this.value)" />
  </f:entry>
  </f:optionalBlock>

  </f:block>

  <f:entry title="Use update">
    <f:checkbox name="cc.useupdate" checked="${h.defaultToTrue(scm.useUpdate)}" />
    If checked, Jenkins will use 'cleartool update' whenever possible,
    making the build faster.
    But this causes the artifacts from the
    previous build to remain when a new build starts.
  </f:entry>
  <f:entry title="Changeset" field="cc.changeset" help="/plugin/clearcase/base/help-changeset.html">
    <local:blockWrapper>
      <f:radioBlock name="cc.changeset" title="No History" checked="${scm.changeset.name eq 'no'}" value="no"/>
      <f:radioBlock name="cc.changeset" title="Current branch" checked="${scm.changeset eq null || scm.changeset.name eq 'branch'}" value="branch"/>
      <f:radioBlock name="cc.changeset" title="Use updt file" checked="${scm.changeset.name eq 'updt'}" value="updt"/>
    </local:blockWrapper>
  </f:entry>

  <f:entry title="Branch(es)" help="/plugin/clearcase/branch.html">
    <f:expandableTextbox name="cc.branch" value="${scm.branch}" />
  </f:entry>

  <f:entry title="Label(s)" help="/plugin/clearcase/label.html">
    <f:expandableTextbox name="cc.label" value="${scm.label}" />
  </f:entry>

  <f:advanced>
    <f:entry title="Excluded Regions" help="/plugin/clearcase/excludedRegions.html">
      <f:textarea name="cc.excludedRegions" value="${scm.excludedRegions}"
        checkUrl="'${rootURL}/scm/ClearCaseSCM/excludedRegionsCheck?value='+escape(this.value)" />
    </f:entry>
    <st:include class="${descriptor.clazz}" page="overrideViewStorage.jelly" />
    <f:entry title="Additional mkview arguments" help="/plugin/clearcase/mkviewoptionalparam.html">
      <f:expandableTextbox name="cc.mkviewoptionalparam"
        value="${scm.mkviewOptionalParam}" />
    </f:entry>
    <f:entry title="Filter 'Destroy sub branch' event"
      help="/plugin/clearcase/filteroutdestroysubbranchevent.html">
      <f:checkbox name="cc.filterOutDestroySubBranchEvent"
        checked="${scm.filteringOutDestroySubBranchEvent}" />
      If checked, Jenkins will filter out
      <i>'Destroy sub-branch "BRANCHNAME" of branch'</i>
      events when polling
      and retrieving change logs from a ClearCase
      repository.
    </f:entry>
    <f:entry title="Remove clearcase view on rename">
      <f:checkbox name="cc.rmviewonrename" checked="${scm.removeViewOnRename}" />
      If checked, Jenkins will try to remove the existing clearcase view.
    </f:entry>
    <f:entry title="Multi-site poll buffer" help="/plugin/clearcase/multiSitePollBuffer.html">
      <f:textbox name="cc.multiSitePollBuffer" value="${scm.multiSitePollBuffer}" />
    </f:entry>
    <f:block>
      <local:blockWrapper>
        <f:optionalBlock name="cc.usedynamicview" title="Use dynamic view"
          checked="${scm.useDynamicView}" help="/plugin/clearcase/dynamicview.html">
          <f:entry title="View root" help="/plugin/clearcase/viewdrive.html">
            <j:choose>
              <j:when test="${h.isWindows()}">
                <f:textbox name="cc.viewdrive"
                  value="${h.defaulted(scm.viewDrive, 'M:\')}" />
              </j:when>
              <j:otherwise>
                <f:textbox name="cc.viewdrive"
                  value="${h.defaulted(scm.viewDrive, '/view')}" />
              </j:otherwise>
            </j:choose>
          </f:entry>
          <f:block>
            <div>
              <f:optionalBlock name="cc.createDynView"
                title="Let Jenkins manage the view lifecycle"
                checked="${scm.createDynView}" help="/plugin/clearcase/manageviewlifecycle.html">
                <f:entry title="Windows dynamic view storage directory"
                  help="/plugin/clearcase/dynamicViewStorage.html">
                  <f:textbox name="cc.winDynStorageDir"
                    value="${h.defaulted(scm.winDynStorageDir, descriptor.defaultWinDynStorageDir)}" />
                </f:entry>
                <f:entry title="Unix dynamic view storage directory"
                  help="/plugin/clearcase/dynamicViewStorage.html">
                  <f:textbox name="cc.unixDynStorageDir"
                    value="${h.defaulted(scm.unixDynStorageDir, descriptor.defaultUnixDynStorageDir)}" />
                </f:entry>
              </f:optionalBlock>
            </div>
          </f:block>

          <f:entry title="Use time rule in config spec">
            <f:checkbox name="cc.useTimeRule" checked="${scm.useTimeRule}" />
            If checked, Jenkins will use a time rule in the dynamic
            view's config spec,
            locking the view contents in as of the
            beginning of the build, even if files are
            changed on the
            branch during the build.
          </f:entry>
          <f:entry title="Do Not Reset Config Spec">
            <f:checkbox name="cc.doNotUpdateConfigSpec"
              checked="${scm.doNotUpdateConfigSpec}" />
            If checked, Jenkins will not use 'cleartool setcs' even if
            the specifed config spec is
            different to the dynamic view
            current config spec.
          </f:entry>

        </f:optionalBlock>
      </local:blockWrapper>
    </f:block>
  </f:advanced>
</j:jelly>
